{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://phpthunder/./src/PHPThunder.ts","webpack://phpthunder/./src/enum/logLevel.ts","webpack://phpthunder/./src/model/Config.ts","webpack://phpthunder/./src/model/Config/FormatConfig.ts","webpack://phpthunder/./src/model/Config/PluginConfig.ts","webpack://phpthunder/./src/model/State.ts","webpack://phpthunder/./src/model/factory/ConfigFactory.ts","webpack://phpthunder/./src/model/factory/StateFactory.ts","webpack://phpthunder/./src/plugin/General.ts","webpack://phpthunder/./src/plugin/PHPCBF.ts","webpack://phpthunder/./src/plugin/PHPCBF/PHPCBFConfig.ts","webpack://phpthunder/./src/plugin/PHPCS.ts","webpack://phpthunder/./src/plugin/PHPCS/PHPCSConfig.ts","webpack://phpthunder/./src/plugin/PHPCSFixer.ts","webpack://phpthunder/./src/plugin/PHPCSFixer/PHPCSFixerConfig.ts","webpack://phpthunder/./src/plugin/PHPFMT.ts","webpack://phpthunder/./src/plugin/PHPFMT/PHPFMTConfig.ts","webpack://phpthunder/./src/plugin/Plugin.ts","webpack://phpthunder/./src/service/BaseService.ts","webpack://phpthunder/./src/service/ConfigService.ts","webpack://phpthunder/./src/service/LogService.ts","webpack://phpthunder/./src/service/PluginService.ts","webpack://phpthunder/external commonjs \"vscode\"","webpack://phpthunder/external node-commonjs \"child_process\"","webpack://phpthunder/external node-commonjs \"fs\"","webpack://phpthunder/external node-commonjs \"os\"","webpack://phpthunder/webpack/bootstrap","webpack://phpthunder/./src/extension.ts"],"sourcesContent":["import * as vscode from \"vscode\";\n\nimport State from \"@model/State\";\nimport StateFactory from \"@model/factory/StateFactory\";\n\nexport default class PHPThunder {\n    private extensionContext: vscode.ExtensionContext;\n    private state: State;\n\n    constructor(extensionContext: vscode.ExtensionContext) {\n        console.log(\"Activating extension: PHPThunder...\");\n        this.extensionContext = extensionContext;\n        this.state = StateFactory.createState(this.extensionContext);\n        this.state.getLogService().log(\"PHPThunder extension activated.\", null, 0);\n        this.state.getPluginService().initPlugins();\n    }\n\n    public getState(): State {\n        return this.state;\n    }\n}\n","export enum LogLevel {\n    debug = -1,\n    information = 0,\n    warning = 1,\n    error = 2\n}","import FormatConfig from \"@model/Config/FormatConfig\";\n\nexport default class Config {\n    private enable: boolean;\n    private phpExecutablePath: string|null;\n    private composerExecutablePath: string|null;\n    private composerJsonPath: string|null;\n    private debug: boolean;\n    private formatConfig: FormatConfig;\n\n    constructor(enable: boolean, phpExecutablePath: string|null, composerExecutablePath: string|null,  debug: boolean, composerJsonPath: string|null, formatConfig: FormatConfig) {\n        this.enable = enable;\n        this.phpExecutablePath = phpExecutablePath;\n        this.composerExecutablePath = composerExecutablePath;\n        this.debug = debug;\n        this.composerJsonPath = composerJsonPath;\n        this.formatConfig = formatConfig;\n    }\n\n    public isEnable(): boolean {\n        return this.enable;\n    }\n\n    public getPhpExecutablePath(): string|null {\n        return this.phpExecutablePath;\n    }\n\n    public getComposerExecutablePath(): string|null {\n        return this.composerExecutablePath;\n    }\n\n    public getComposerJsonPath(): string|null {\n        return this.composerJsonPath;\n    }\n\n    public getDebug(): boolean {\n        return this.debug;\n    }\n\n    public getFormatConfig(): FormatConfig {\n        return this.formatConfig;\n    }\n}\n","import PHPCBFConfig from \"@plugin/PHPCBF/PHPCBFConfig\";\nimport PHPCSConfig from \"@plugin/PHPCS/PHPCSConfig\";\nimport PHPCSFixerConfig from \"@plugin/PHPCSFixer/PHPCSFixerConfig\";\nimport PHPFMTConfig from \"@plugin/PHPFMT/PHPFMTConfig\";\n\nexport default class FormatConfig {\n    private enable: boolean;\n    private onSave: boolean;\n    private onBracket: boolean;\n    private onSemicolon: boolean;\n    private formatHtml: boolean;\n    private documentFormattingProvider: boolean;\n    private standard: string;\n    private autoConfigSearch: boolean;\n    private ignorePatterns: string[];\n    private errorSeverity: number;\n    private warningSeverity: number;\n    private showWarnings: boolean;\n    private showSources: boolean;\n    private traceServer: string;\n\n    private phpcsConfig: PHPCSConfig;\n    private phpcbfConfig: PHPCBFConfig;\n    private phpcsfixerConfig: PHPCSFixerConfig;\n    private phpfmtConfig: PHPFMTConfig;\n\n    constructor(\n        enable: boolean,\n        onSave: boolean,\n        onBracket: boolean,\n        onSemicolon: boolean,\n        formatHtml: boolean,\n        documentFormattingProvider: boolean,\n        standard: string,\n        autoConfigSearch: boolean,\n        ignorePatterns: string[],\n        errorSeverity: number,\n        warningSeverity: number,\n        showWarnings: boolean,\n        showSources: boolean,\n        traceServer: string,\n        phpcsConfig: PHPCSConfig,\n        phpcbfConfig: PHPCBFConfig,\n        phpcsfixerConfig: PHPCSFixerConfig,\n        phpfmtConfig: PHPFMTConfig\n    ) {\n        this.enable = enable;\n        this.onSave = onSave;\n        this.onBracket = onBracket;\n        this.onSemicolon = onSemicolon;\n        this.formatHtml = formatHtml;\n        this.documentFormattingProvider = documentFormattingProvider;\n        this.standard = standard;\n        this.autoConfigSearch = autoConfigSearch;\n        this.ignorePatterns = ignorePatterns;\n        this.errorSeverity = errorSeverity;\n        this.warningSeverity = warningSeverity;\n        this.showWarnings = showWarnings;\n        this.showSources = showSources;\n        this.traceServer = traceServer;\n        this.phpcsConfig = phpcsConfig;\n        this.phpcbfConfig = phpcbfConfig;\n        this.phpcsfixerConfig = phpcsfixerConfig;\n        this.phpfmtConfig = phpfmtConfig;\n    }\n\n    public getEnable(): boolean {\n        return this.enable;\n    }\n\n    public getOnSave(): boolean {\n        return this.onSave;\n    }\n\n    public getOnBracket(): boolean {\n        return this.onBracket;\n    }\n\n    public getOnSemicolon(): boolean {\n        return this.onSemicolon;\n    }\n\n    public getFormatHtml(): boolean {\n        return this.formatHtml;\n    }\n\n    public getDocumentFormattingProvider(): boolean {\n        return this.documentFormattingProvider;\n    }\n\n    public getStandard(): string {\n        return this.standard;\n    }\n\n    public getAutoConfigSearch(): boolean {\n        return this.autoConfigSearch;\n    }\n\n    public getIgnorePatterns(): string[] {\n        return this.ignorePatterns;\n    }\n\n    public getErrorSeverity(): number {\n        return this.errorSeverity;\n    }\n\n    public getWarningSeverity(): number {\n        return this.warningSeverity;\n    }\n\n    public getShowWarnings(): boolean {\n        return this.showWarnings;\n    }\n\n    public getShowSources(): boolean {\n        return this.showSources;\n    }\n\n    public getTraceServer(): string {\n        return this.traceServer;\n    }\n\n    public getPhpcsConfig(): PHPCSConfig {\n        return this.phpcsConfig;\n    }\n\n    public getPhpcbfConfig(): PHPCBFConfig {\n        return this.phpcbfConfig;\n    }\n\n    public getPhpcsfixerConfig(): PHPCSFixerConfig {\n        return this.phpcsfixerConfig;\n    }\n\n    public getPhpfmtConfig(): PHPFMTConfig {\n        return this.phpfmtConfig;\n    }\n}","export default class PluginConfig {\n    private enable: boolean;\n    private executablePath: string | null;\n\n    constructor(enable: boolean, executablePath: string | null) {\n        this.enable = enable;\n        this.executablePath = executablePath;\n    }\n\n    public getEnable(): boolean {\n        return this.executablePath !== null && this.enable;\n    }\n\n    public getExecutablePath(): string | null {\n        return this.executablePath;\n    }\n}\n","import * as vscode from \"vscode\";\n\nimport BaseService from \"@service/BaseService\";\nimport ConfigService from \"@service/ConfigService\";\nimport LogService from \"@service/LogService\";\nimport PluginService from \"@service/PluginService\";\n\nexport default class State {\n    private extensionContext: vscode.ExtensionContext;\n\n    private workspaceConfiguration: vscode.WorkspaceConfiguration;\n\n    private baseService: BaseService;\n    private configService: ConfigService;\n    private logService: LogService;\n    private pluginService: PluginService;\n\n    private activeTextEditorDocumentUri: vscode.Uri | null = null;\n\n    private debug: boolean = false;\n\n    constructor(extensionContext: vscode.ExtensionContext) {\n        this.extensionContext = extensionContext;\n    }\n\n    public getExtensionContext(): vscode.ExtensionContext {\n        return this.extensionContext;\n    }\n\n    public setWorkspaceConfiguration(workspaceConfiguration: vscode.WorkspaceConfiguration): void {\n        this.workspaceConfiguration = workspaceConfiguration;\n    }\n\n    public getWorkspaceConfiguration(): vscode.WorkspaceConfiguration {\n        return this.workspaceConfiguration;\n    }\n\n    public setBaseService(baseService: BaseService): void {\n        this.baseService = baseService;\n    }\n\n    public getBaseService(): BaseService {\n        return this.baseService;\n    }\n\n    public setConfigService(configService: ConfigService): void {\n        this.configService = configService;\n    }\n\n    public getConfigService(): ConfigService {\n        return this.configService;\n    }\n\n    public setLogService(logService: LogService): void {\n        this.logService = logService;\n    }\n\n    public getLogService(): LogService {\n        return this.logService;\n    }\n\n    public setPluginService(pluginService: PluginService): void {\n        this.pluginService = pluginService;\n    }\n\n    public getPluginService(): PluginService {\n        return this.pluginService;\n    }\n\n    public setActiveTextEditorDocumentUri(activeTextEditorDocumentUri: vscode.Uri | null): void {\n        this.activeTextEditorDocumentUri = activeTextEditorDocumentUri;\n    }\n\n    public getActiveTextEditorDocumentUri(): vscode.Uri | null {\n        return this.activeTextEditorDocumentUri;\n    }\n\n    public setDebug(debug: boolean): void {\n        this.debug = debug;\n    }\n\n    public getDebug(): boolean {\n        return this.debug;\n    }\n}\n","import * as vscode from \"vscode\";\n\nimport Config from \"@model/Config\";\nimport FormatConfig from \"@model/Config/FormatConfig\";\nimport PHPCBFConfig from \"@plugin/PHPCBF/PHPCBFConfig\";\nimport PHPCSConfig from \"@plugin/PHPCS/PHPCSConfig\";\nimport PHPCSFixerConfig from \"@plugin/PHPCSFixer/PHPCSFixerConfig\";\nimport PHPFMTConfig from \"@plugin/PHPFMT/PHPFMTConfig\";\n\nexport default class ConfigFactory {\n    public static createConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): Config {\n        const enable = workspaceConfiguration.get(\"enable\", true);\n        const phpExecutablePath = this.getExecutablePath(\n            workspaceConfiguration.get(\"phpExecutablePath\", \"/usr/bin/php\")\n        );\n        const composerExecutablePath = this.getExecutablePath(\n            workspaceConfiguration.get(\"composerExecutablePath\", null)\n        );\n        const debug = workspaceConfiguration.get(\"debug\", false);\n        const composerJsonPath = this.getExecutablePath(workspaceConfiguration.get(\"composerJsonPath\", null));\n        const formatConfig = this.createFormatConfig(workspaceConfiguration);\n        return new Config(enable, phpExecutablePath, composerExecutablePath, debug, composerJsonPath, formatConfig);\n    }\n\n    public static createFormatConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): FormatConfig {\n        const enable = workspaceConfiguration.get(\"format.enable\", false);\n        const onSave = workspaceConfiguration.get(\"format.onSave\", false);\n        const onBracket = workspaceConfiguration.get(\"format.onBracket\", false);\n        const onSemicolon = workspaceConfiguration.get(\"format.onSemicolon\", false);\n        const formatHtml = workspaceConfiguration.get(\"format.formatHtml\", false);\n        const documentFormattingProvider = workspaceConfiguration.get(\"format.documentFormattingProvider\", false);\n        let standard = this.getExecutablePath(workspaceConfiguration.get(\"format.standard\", \"PSR12\"));\n        const autoConfigSearch = workspaceConfiguration.get(\"format.autoConfigSearch\", false);\n        const ignorePatterns = workspaceConfiguration.get(\"format.ignorePatterns\", []);\n        const errorSeverity = workspaceConfiguration.get(\"format.errorSeverity\", 5);\n        const warningSeverity = workspaceConfiguration.get(\"format.warningSeverity\", 5);\n        const showWarnings = workspaceConfiguration.get(\"format.showWarnings\", false);\n        const showSources = workspaceConfiguration.get(\"format.showSources\", false);\n        const traceServer = workspaceConfiguration.get(\"format.traceServer\", \"off\");\n        const phpcsConfig = this.createPhpCSConfig(workspaceConfiguration);\n        const phpcbfConfig = this.createPhpCBFConfig(workspaceConfiguration);\n        const phpcsfixerConfig = this.createPhpCSFixerFConfig(workspaceConfiguration);\n        const phpfmtConfig = this.createPhpFMTConfig(workspaceConfiguration);\n\n        if(standard === null) {\n            standard = \"PSR12\";\n        }\n        return new FormatConfig(\n            enable,\n            onSave,\n            onBracket,\n            onSemicolon,\n            formatHtml,\n            documentFormattingProvider,\n            standard,\n            autoConfigSearch,\n            ignorePatterns,\n            errorSeverity,\n            warningSeverity,\n            showWarnings,\n            showSources,\n            traceServer,\n            phpcsConfig,\n            phpcbfConfig,\n            phpcsfixerConfig,\n            phpfmtConfig\n        );\n    }\n\n    public static createPhpCSConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): PHPCSConfig {\n        const enable = workspaceConfiguration.get(\"format.phpcs.enable\", false);\n        const executablePath = this.getExecutablePath(workspaceConfiguration.get(\"format.phpcs.executablePath\", null));\n        return new PHPCSConfig(enable, executablePath);\n    }\n\n    public static createPhpCBFConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): PHPCBFConfig {\n        const enable = workspaceConfiguration.get(\"format.phpcbf.enable\", false);\n        const executablePath = this.getExecutablePath(workspaceConfiguration.get(\"format.phpcbf.executablePath\", null));\n        return new PHPCBFConfig(enable, executablePath);\n    }\n\n    public static createPhpCSFixerFConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): PHPCSFixerConfig {\n        const enable = workspaceConfiguration.get(\"format.phpcsfixer.enable\", false);\n        const executablePath = this.getExecutablePath(\n            workspaceConfiguration.get(\"format.phpcsfixer.executablePath\", null)\n        );\n        const allowRisky = workspaceConfiguration.get(\"format.phpcsfixer.allowRisky\", false);\n        return new PHPCSFixerConfig(enable, executablePath, allowRisky);\n    }\n\n    public static createPhpFMTConfig(workspaceConfiguration: vscode.WorkspaceConfiguration): PHPFMTConfig {\n        const enable = workspaceConfiguration.get(\"format.phpfmt.enable\", false);\n        const executablePath = this.getExecutablePath(workspaceConfiguration.get(\"format.phpfmt.executablePath\", null));\n        return new PHPFMTConfig(enable, executablePath);\n    }\n\n    public static getExecutablePath(configPath: string | null): string | null {\n        if (configPath === null) {\n            return null;\n        }\n        let modifiedPath = configPath;\n        modifiedPath = modifiedPath.replace(/\\$\\{workspaceFolder\\}/g, this.getDocumentWorkspaceFolder() || \"\");\n        if (modifiedPath.startsWith(\"./\")) {\n            modifiedPath = this.getDocumentWorkspaceFolder() + modifiedPath.substring(1);\n        }\n        if (!modifiedPath.startsWith(\"/\")) {\n            if (modifiedPath.includes(\"/\") || modifiedPath.includes(\".\")) {\n                modifiedPath = this.getDocumentWorkspaceFolder() + \"/\" + modifiedPath;\n            }\n        }\n        return modifiedPath;\n    }\n\n    public static getDocumentWorkspaceFolder(): string | undefined {\n        const fileName = vscode.window.activeTextEditor?.document.fileName;\n        return vscode.workspace.workspaceFolders\n            ?.map((folder) => folder.uri.fsPath)\n            .filter((fsPath) => fileName?.startsWith(fsPath))[0];\n    }\n}\n","import * as vscode from \"vscode\";\n\nimport State from \"@model/State\";\nimport BaseService from \"@service/BaseService\";\nimport ConfigService from \"@service/ConfigService\";\nimport LogService from \"@service/LogService\";\nimport PluginService from \"@service/PluginService\";\n\nimport ConfigFactory from \"@model/factory/ConfigFactory\";\n\nexport default class StateFactory {\n    public static createState(extensionContext: vscode.ExtensionContext): State {\n        console.log(\"Loading PHPThunder state...\");\n\n        const state = new State(extensionContext);\n\n        console.log(\"Loading log service...\");\n        state.setLogService(new LogService());\n        state.getLogService().log(\"Log service loaded.\", null, 0);\n\n        state.getLogService().log(\"Loading active text editor...\", null, 0);\n        if (vscode.window.activeTextEditor) {\n            state.getLogService().log(\"Active text editor: \", vscode.window.activeTextEditor);\n            state.setActiveTextEditorDocumentUri(vscode.window.activeTextEditor.document.uri);\n            state.getLogService().log(\"Active text editor loaded.\", null, 0);\n        } else {\n            state.getLogService().log(\"No active text editor.\", null, 0);\n        }\n\n        state.getLogService().log(\"Loading configuration...\", null, 0);\n        state.setWorkspaceConfiguration(vscode.workspace.getConfiguration(\"phpthunder\", state.getActiveTextEditorDocumentUri()));\n        state.getLogService().log(\"Document Workspace Folder: \" +(ConfigFactory.getDocumentWorkspaceFolder() as string));\n        state.setConfigService(new ConfigService(ConfigFactory.createConfig(state.getWorkspaceConfiguration())));\n        state.setDebug(state.getConfigService().getConfig().getDebug());\n        state.getLogService().setDebug(state.getDebug());\n        state.getLogService().log(\"Debug mode: \" + state.getDebug(), null, 0);\n        state.getLogService().log(\"Config: \", state.getConfigService().getConfig());\n        state.getLogService().log(\"Configuration loaded.\", null, 0);\n\n        state.getLogService().log(\"Loading base service...\", null, 0);\n        state.setBaseService(new BaseService(state));\n        state.getLogService().log(\"Base service loaded.\", null, 0);\n\n        state.getLogService().log(\"Loading plugin service...\", null, 0);\n        state.setPluginService(new PluginService(state));\n        state.getLogService().log(\"Plugin service loaded.\", null, 0);\n\n        state.getLogService().log(\"PHPThunder state loaded.\", null , 0);\n        return state;\n    }\n}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\n\nimport Plugin from \"@plugin/Plugin\";\n\nexport default class Genral extends Plugin {\n    public pluginName: string = \"General\";\n\n    public registerSubscriptionsTool(): void {\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPVersion\", () => {\n                this.showPHPVersion();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showComposerVersion\", () => {\n                this.showComposerVersion();\n            })\n        );\n    }\n\n    public initTool(): void {}\n\n    public showPHPVersion(): void {\n        if (!this.getConfig().isEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder is disabled.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" -v\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"PHP version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n\n    public showComposerVersion(): void {\n        if (!this.getConfig().isEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder is disabled.\");\n            return;\n        }\n        if (this.getConfig().getComposerExecutablePath() === null) {\n            vscode.window.showWarningMessage(\"PHPThunder: composer executable path not defined.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        const composerExecutablePath = this.getConfig().getComposerExecutablePath();\n        this.log(\"Composer Executable Path: \" + composerExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" \" + composerExecutablePath + \" --version\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"Composer version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\nimport * as fs from \"fs\";\n\nimport Plugin from \"@plugin/Plugin\";\n\nexport default class PHPCBF extends Plugin {\n    public pluginName: string = \"PHPCBF\";\n\n    public registerSubscriptionsTool(): void {\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPCBFVersion\", () => {\n                this.showPHPCBFVersion();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPCBFInstalledCodingStandards\", () => {\n                this.showPHPBFInstalledCodingStandards();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.phpcbfDocument\", () => {\n                this.phpCBFCurrentDocument();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.languages.registerDocumentFormattingEditProvider(\"php\", {\n                provideDocumentFormattingEdits: (document, options, token) => {\n                    return new Promise(async (resolve, reject) => {\n                        this.log(\"Formatting document: \" + document.fileName);\n                        const originalText = document.getText();\n                        let lastLine = document.lineAt(document.lineCount - 1);\n                        let range = new vscode.Range(new vscode.Position(0, 0), lastLine.range.end);\n                        const fixedText = await this.formatDocument(document);\n                        if (fixedText.length > 0 && fixedText !== originalText) {\n                            this.log(\"Document: \" + document.fileName + \" - formatted.\");\n                            resolve([new vscode.TextEdit(range, fixedText)]);\n                        } else if (fixedText === originalText) {\n                            this.log(\"Document: \" + document.fileName + \" - no changes made.\");\n                        } else {\n                            this.log(\"Document: \" + document.fileName + \" - formatting failed.\");\n                        }\n                        reject();\n                    });\n                },\n            })\n        );\n    }\n\n    public initTool(): void {\n        this.setConfig(\"report_format\", \"full\");\n        if (this.getShowWarnings()) {\n            this.setConfig(\"show_warnings\", \"1\");\n        } else {\n            this.setConfig(\"show_warnings\", \"0\");\n        }\n        this.setConfig(\"severity\", this.getErrorSeverity().toString());\n        this.setConfig(\"error_severity\", this.getErrorSeverity().toString());\n        this.setConfig(\"error_warning\", this.getWarningSeverity().toString());\n    }\n\n    public showPHPCBFVersion(): void {\n        if (!this.getConfig().getFormatConfig().getPhpcbfConfig().getEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder: phpcbf is disabled.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        const phpCBFExecutablePath = this.getConfig().getFormatConfig().getPhpcbfConfig().getExecutablePath();\n        this.log(\"PHPCBF Executable Path: \" + phpCBFExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" \" + phpCBFExecutablePath + \" --version\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"PHPCBF version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n\n    public async showPHPBFInstalledCodingStandards(): Promise<void> {\n        let phpcbfCommand = this.getExceuteBaseCommand();\n        phpcbfCommand += \" -i\";\n        await this.execute(phpcbfCommand);\n    }\n\n    public phpCBFCurrentDocument(): void {\n        this.phpCBFDocument(this.getCurrentlyOpenTabDocumentPath());\n    }\n\n    public async phpCBFDocument(filePath: string): Promise<void> {\n        let phpcbfCommand = this.getExceuteBaseCommand();\n        phpcbfCommand += \" --standard=\" + this.getStandard() + \" \";\n        phpcbfCommand += \"--no-colors \";\n        phpcbfCommand += filePath;\n        await this.execute(phpcbfCommand);\n    }\n\n    public async formatDocument(document: vscode.TextDocument): Promise<string> {\n        this.log(\"Formatting document: \" + document.fileName);\n        let text = document.getText();\n        let phpcbfError = false;\n        let tempFileName =\n            this.getTempDirectory() +\n            \"/temp-\" +\n            Math.random()\n                .toString(36)\n                .replace(/[^a-z]+/g, \"\")\n                .substr(0, 10) +\n            \".php\";\n        this.log(\"Temp file name: \" + tempFileName);\n        fs.writeFileSync(tempFileName, text);\n\n        let phpcbfCommand = this.getExceuteBaseCommand();\n        if (this.isDebugEnabled()) {\n            phpcbfCommand += \"-l \";\n        } else {\n            phpcbfCommand += \"-lq \";\n        }\n\n        phpcbfCommand += tempFileName + \" \";\n        phpcbfCommand += \" --standard=\" + this.getStandard() + \" \";\n\n        const formatSuccess = await this.execute(phpcbfCommand);\n\n        let fixed = fs.readFileSync(tempFileName, \"utf-8\");\n\n        return fixed;\n    }\n\n    async setConfig(name: string, value: string): Promise<void> {\n        let phpcsConfig = this.getExceuteBaseCommand();\n        phpcsConfig += \"--config-set \" + name + \" \" + value + \" \";\n        await this.execute(phpcsConfig);\n    }\n\n    public getToolExecutablePath(): string {\n        const phpCBFExecutablePath = this.getConfig().getFormatConfig().getPhpcbfConfig().getExecutablePath();\n        if (this.isEnabled() && phpCBFExecutablePath) {\n            return phpCBFExecutablePath;\n        }\n        vscode.window.showWarningMessage(\"PHPThunder: phpcbf is disabled.\");\n        throw new Error(\"PHPThunder: phpcbf is disabled.\");\n    }\n\n    public isEnabled(): boolean {\n        if (super.isEnabled()) {\n            return this.getConfig().getFormatConfig().getPhpcbfConfig().getEnable();\n        }\n        return false;\n    }\n}\n","import PluginConfig from \"@model/Config/PluginConfig\";\n\nexport default class PHPCBFConfig extends PluginConfig {}\n","import * as vscode from \"vscode\";\nimport {\n    LanguageClient,\n    LanguageClientOptions,\n    Middleware,\n    Proposed,\n    ProposedFeatures,\n    ServerOptions,\n    TransportKind,\n} from \"vscode-languageclient\";\nimport * as childProcess from \"child_process\";\nimport * as path from \"path\";\n\nimport Plugin from \"@plugin/Plugin\";\n\nexport default class PHPCS extends Plugin {\n    public pluginName: string = \"PHPCS\";\n\n    public registerSubscriptionsTool(): void {\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPCSVersion\", () => {\n                this.showPHPCSVersion();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPCSInstalledCodingStandards\", () => {\n                this.showPHPCSInstalledCodingStandards();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.phpcsDocument\", () => {\n                this.phpCSCurrentDocument();\n            })\n        );\n    }\n\n    public initTool(): void {\n        this.setConfig(\"report_format\", \"full\");\n        if (this.getShowWarnings()) {\n            this.setConfig(\"show_warnings\", \"1\");\n        } else {\n            this.setConfig(\"show_warnings\", \"0\");\n        }\n        this.setConfig(\"severity\", this.getErrorSeverity().toString());\n        this.setConfig(\"error_severity\", this.getErrorSeverity().toString());\n        this.setConfig(\"error_warning\", this.getWarningSeverity().toString());\n    }\n\n    public showPHPCSVersion(): void {\n        if (!this.getConfig().getFormatConfig().getPhpcsConfig().getEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder: phpcs is disabled.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        const phpCSExecutablePath = this.getConfig().getFormatConfig().getPhpcsConfig().getExecutablePath();\n        this.log(\"PHPCS Executable Path: \" + phpCSExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" \" + phpCSExecutablePath + \" --version\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"PHPCS version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n\n    public async showPHPCSInstalledCodingStandards(): Promise<void> {\n        let phpcsCommand = this.getExceuteBaseCommand();\n        phpcsCommand += \" -i\";\n        await this.execute(phpcsCommand);\n    }\n\n    public phpCSCurrentDocument(): void {\n        this.phpCSDocument(this.getCurrentlyOpenTabDocumentPath());\n    }\n\n    public async phpCSDocument(filePath: string): Promise<void> {\n        let phpcsCommand = this.getExceuteBaseCommand();\n        phpcsCommand += \" --standard=\" + this.getStandard() + \" \";\n        phpcsCommand += \"--no-colors \";\n        phpcsCommand += filePath;\n        await this.execute(phpcsCommand);\n    }\n\n    async setConfig(name: string, value: string): Promise<void> {\n        let phpcsConfig = this.getExceuteBaseCommand();\n        phpcsConfig += \"--config-set \" + name + \" \" + value + \" \";\n        await this.execute(phpcsConfig);\n    }\n\n    public getToolExecutablePath(): string {\n        const phpCSExecutablePath = this.getConfig().getFormatConfig().getPhpcsConfig().getExecutablePath();\n        if (this.isEnabled() && phpCSExecutablePath) {\n            return phpCSExecutablePath;\n        }\n        vscode.window.showWarningMessage(\"PHPThunder: phpcs is disabled.\");\n        throw new Error(\"PHPThunder: phpcs is disabled.\");\n    }\n}\n","import PluginConfig from \"@model/Config/PluginConfig\";\n\nexport default class PHPCSConfig extends PluginConfig {}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\n\nimport Plugin from \"@plugin/Plugin\";\n\nexport default class PHPCSFixer extends Plugin {\n    public pluginName: string = \"PHPCSFixer\";\n\n    public registerSubscriptionsTool(): void {\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPCSFixerVersion\", () => {\n                this.showPHPCSFixerVersion();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.phpcsfixerDocument\", () => {\n                this.phpCSFixerCurrentDocument();\n            })\n        );\n    }\n\n    public initTool(): void {}\n\n    public showPHPCSFixerVersion(): void {\n        if (!this.getConfig().getFormatConfig().getPhpcsfixerConfig().getEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder: php-cs-fixer is disabled.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        const phpCSFixerExecutablePath = this.getConfig().getFormatConfig().getPhpcsfixerConfig().getExecutablePath();\n        this.log(\"PHP-CS-Fixer Executable Path: \" + phpCSFixerExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" \" + phpCSFixerExecutablePath + \" --version\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"PHP-CS-Fixer version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n\n    public phpCSFixerCurrentDocument(): void {\n        this.phpCSFixerDocument(this.getCurrentlyOpenTabDocumentPath());\n    }\n\n    public async phpCSFixerDocument(filePath: string): Promise<void> {\n        let phpcsfixerCommand = this.getExceuteBaseCommand();\n        phpcsfixerCommand += \" --standard=\" + this.getStandard() + \" \";\n        phpcsfixerCommand += \"--no-colors \";\n        phpcsfixerCommand += filePath;\n        await this.execute(phpcsfixerCommand);\n    }\n\n    async setConfig(name: string, value: string): Promise<void> {\n        let phpcsConfig = this.getExceuteBaseCommand();\n        phpcsConfig += \"--config-set \" + name + \" \" + value + \" \";\n        await this.execute(phpcsConfig);\n    }\n\n    public getToolExecutablePath(): string {\n        const phpCSFixerExecutablePath = this.getConfig().getFormatConfig().getPhpcsfixerConfig().getExecutablePath();\n        if (this.isEnabled() && phpCSFixerExecutablePath) {\n            return phpCSFixerExecutablePath;\n        }\n        vscode.window.showWarningMessage(\"PHPThunder: phpcsfixer is disabled.\");\n        throw new Error(\"PHPThunder: phpcsfixer is disabled.\");\n    }\n\n    public isEnabled(): boolean {\n        if (super.isEnabled()) {\n            return this.getConfig().getFormatConfig().getPhpcsfixerConfig().getEnable();\n        }\n        return false;\n    }\n}\n","import PluginConfig from \"@model/Config/PluginConfig\";\n\nexport default class PHPCSFixerConfig extends PluginConfig {\n    private allowRisky: boolean;\n\n    constructor(enable: boolean, executablePath: string | null, allowRisky: boolean) {\n        super(enable, executablePath);\n        this.allowRisky = allowRisky;\n    }\n\n    public getAllowRisky(): boolean {\n        return this.allowRisky;\n    }\n}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\n\nimport Plugin from \"@plugin/Plugin\";\n\nexport default class PHPFMT extends Plugin {\n    public pluginName: string = \"PHPFMT\";\n\n    public registerSubscriptionsTool(): void {\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.showPHPFMTVersion\", () => {\n                this.showPHPFMTVersion();\n            })\n        );\n\n        this.getExtensionContext().subscriptions.push(\n            vscode.commands.registerCommand(\"phpthunder.phpfmtDocument\", () => {\n                this.phpFMTCurrentDocument();\n            })\n        );\n    }\n\n    public initTool(): void {}\n\n    public showPHPFMTVersion(): void {\n        if (!this.getConfig().getFormatConfig().getPhpfmtConfig().getEnable()) {\n            vscode.window.showWarningMessage(\"PHPThunder: phpfmt is disabled.\");\n            return;\n        }\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        this.log(\"PHP Executable Path: \" + phpExecutablePath, null, 0);\n        const phpFMTFixerExecutablePath = this.getConfig().getFormatConfig().getPhpfmtConfig().getExecutablePath();\n        this.log(\"PHPFMT Executable Path: \" + phpFMTFixerExecutablePath, null, 0);\n        childProcess.exec(phpExecutablePath + \" \" + phpFMTFixerExecutablePath + \" --version\", (err, stdout, stderr) => {\n            if (err) {\n                vscode.window.showErrorMessage(err.toString());\n                return;\n            }\n            const message = \"PHPFMT version: \" + stdout.toString();\n            vscode.window.showInformationMessage(message);\n            this.log(message, null, 0);\n        });\n    }\n\n    public phpFMTCurrentDocument(): void {\n        this.phpFMTDocument(this.getCurrentlyOpenTabDocumentPath());\n    }\n\n    public async phpFMTDocument(filePath: string): Promise<void> {\n        let phpfmtCommand = this.getExceuteBaseCommand();\n        phpfmtCommand += \" --standard=\" + this.getStandard() + \" \";\n        phpfmtCommand += \"--no-colors \";\n        phpfmtCommand += filePath;\n        await this.execute(phpfmtCommand);\n    }\n\n    async setConfig(name: string, value: string): Promise<void> {\n        let phpcsConfig = this.getExceuteBaseCommand();\n        phpcsConfig += \"--config-set \" + name + \" \" + value + \" \";\n        await this.execute(phpcsConfig);\n    }\n\n    public getToolExecutablePath(): string {\n        const phpFMTExecutablePath = this.getConfig().getFormatConfig().getPhpfmtConfig().getExecutablePath();\n        if (this.isEnabled() && phpFMTExecutablePath) {\n            return phpFMTExecutablePath;\n        }\n        vscode.window.showWarningMessage(\"PHPThunder: phpfmt is disabled.\");\n        throw new Error(\"PHPThunder: phpfmt is disabled.\");\n    }\n\n    public isEnabled(): boolean {\n        if (super.isEnabled()) {\n            return this.getConfig().getFormatConfig().getPhpfmtConfig().getEnable();\n        }\n        return false;\n    }\n}\n","import PluginConfig from \"@model/Config/PluginConfig\";\n\nexport default class PHPFMTConfig extends PluginConfig {}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\nimport * as os from \"os\";\n\nimport { IPlugin } from \"./IPlugin\";\n\nimport State from \"@model/State\";\nimport ConfigService from \"@service/ConfigService\";\nimport LogService from \"@service/LogService\";\n\nimport Config from \"@model/Config\";\n\nimport { LogLevel } from \"@enum/logLevel\";\n\nexport default abstract class Plugin implements IPlugin {\n    private state: State;\n    private extensionContext: vscode.ExtensionContext;\n    public pluginName: string = \"Plugin\";\n\n    constructor(extensionContext: vscode.ExtensionContext, state: State) {\n        this.state = state;\n        this.extensionContext = extensionContext;\n    }\n\n    public registerSubscriptions(): void {\n        if (this.isEnabled()) {\n            this.log(\"Registring plugin: \" + this.getPluginName() + \"...\", null, 0);\n            this.registerSubscriptionsTool();\n            this.log(\"Plugin \" + this.getPluginName() + \" registered.\", null, 0);\n        } else {\n            this.log(\"Plugin \" + this.getPluginName() + \" is disabled.\", null, 0);\n        }\n    }\n\n    public abstract registerSubscriptionsTool(): void;\n\n    public init(): void {\n        if (this.isEnabled()) {\n            this.log(\"Initiating plugin: \" + this.getPluginName() + \"...\", null, 0);\n            this.initTool();\n            this.registerSubscriptions();\n            this.log(\"Plugin \" + this.getPluginName() + \" initiated.\", null, 0);\n        } else {\n            this.log(\"Plugin \" + this.getPluginName() + \" is disabled.\", null, 0);\n        }\n    }\n\n    public abstract initTool(): void;\n\n    public getExceuteBaseCommand(): string {\n        return this.getPHPExecutablePath() + \" \" + this.getToolExecutablePath() + \" \";\n    }\n\n    public getPHPExecutablePath(): string {\n        const phpExecutablePath = this.getConfig().getPhpExecutablePath();\n        if (this.getConfig().isEnable() && phpExecutablePath) {\n            return phpExecutablePath;\n        }\n        throw new Error(\"PHPThunder is not enabled.\");\n    }\n\n    public getToolExecutablePath(): string {\n        return \"\";\n    }\n\n    public async setConfig(name: string, value: string): Promise<void> {}\n\n    public async execute(command: string): Promise<boolean> {\n        this.log(\"Command: \" + command);\n        return new Promise((resolve, reject) => {\n            childProcess.exec(command, (err, stdout, stderr) => {\n                if (err && err.code !== 1) {\n                    vscode.window.showErrorMessage(err.toString() + \"\\n\" + stderr.toString());\n                    this.log(\"\", err, 2);\n                    this.log(\"\", stderr, 2);\n                    this.log(\"OUT: \", stdout, 0);\n                    reject(false);\n                    return;\n                }\n                this.log(\"\", stdout, 0);\n                resolve(true);\n            });\n        });\n    }\n\n    public getCurrentlyOpenTabDocumentPath(): string {\n        if (vscode.window.activeTextEditor) {\n            return vscode.window.activeTextEditor.document.fileName;\n        } else {\n            throw new Error(\"No active tab document.\");\n        }\n    }\n\n    public getStandard(): string {\n        return this.getConfig().getFormatConfig().getStandard();\n    }\n\n    public getErrorSeverity(): number {\n        return this.getConfig().getFormatConfig().getErrorSeverity();\n    }\n\n    public getWarningSeverity(): number {\n        return this.getConfig().getFormatConfig().getWarningSeverity();\n    }\n\n    public getShowWarnings(): boolean {\n        return this.getConfig().getFormatConfig().getShowWarnings();\n    }\n\n    public getShowSources(): boolean {\n        return this.getConfig().getFormatConfig().getShowSources();\n    }\n\n    public isEnabled(): boolean {\n        return this.getConfig().getFormatConfig().getEnable();\n    }\n\n    public provideDocumentFormatting(): boolean {\n        return this.getConfig().getFormatConfig().getDocumentFormattingProvider();\n    }\n\n    public getTempDirectory(): string {\n        return os.tmpdir();\n    }\n\n    public isDebugEnabled(): boolean {\n        return this.getConfig().getDebug();\n    }\n\n    public log(message: string, logObject: Object | null = null, severity: LogLevel | number = LogLevel.debug): void {\n        this.getLogService().log(this.getPluginName() + \": \" + message, logObject, severity);\n    }\n\n    public getConfig(): Config {\n        return this.getConfigService().getConfig();\n    }\n\n    public getConfigService(): ConfigService {\n        return this.state.getConfigService();\n    }\n\n    public getLogService(): LogService {\n        return this.state.getLogService();\n    }\n\n    public getState(): State {\n        return this.state;\n    }\n\n    public getExtensionContext(): vscode.ExtensionContext {\n        return this.extensionContext;\n    }\n\n    public setPluginName(pluginName: string): void {\n        this.pluginName = pluginName;\n    }\n\n    public getPluginName(): string {\n        return this.pluginName;\n    }\n}\n","import * as vscode from \"vscode\";\nimport * as childProcess from \"child_process\";\n\nimport State from \"@model/State\";\n\nexport default class BaseService {\n    private state: State;\n\n    constructor(state: State) {\n        this.state = state;\n    }\n}\n","import Config from \"@model/Config\";\n\nexport default class ConfigService {\n    private config: Config;\n\n    constructor(config: Config) {\n        this.config = config;\n    }\n\n    public getConfig(): Config {\n        return this.config;\n    }\n}\n","import * as vscode from \"vscode\";\n\nimport { LogLevel } from \"@enum/logLevel\";\n\nexport default class LogService {\n    private phpThunderOutputChannel: vscode.OutputChannel;\n    private debug: boolean = true;\n\n    constructor() {\n        this.phpThunderOutputChannel = vscode.window.createOutputChannel(\"PHPThunder\");\n    }\n\n    public setDebug(debug: boolean): void {\n        this.debug = debug;\n    }\n\n    public log(message: string, logObject: Object | null = null, severity: LogLevel | number = LogLevel.debug): void {\n        let messageString = message.toString();\n        if (logObject) {\n            let objectString = logObject.toString();\n            if (objectString === \"[object Object]\") {\n                objectString = JSON.stringify(logObject);\n            }\n            messageString += objectString;\n        }\n        if (severity === LogLevel.debug && this.debug) {\n            this.phpThunderOutputChannel.appendLine(\"[debug] \" + messageString);\n        } else if (severity === LogLevel.information) {\n            this.phpThunderOutputChannel.appendLine(\"[info] \" + messageString);\n        } else if (severity === LogLevel.error) {\n            this.phpThunderOutputChannel.appendLine(\"[error] \" + messageString);\n        } else if (severity === LogLevel.warning) {\n            this.phpThunderOutputChannel.appendLine(\"[warning] \" + messageString);\n        }\n    }\n}\n","import * as vscode from \"vscode\";\n\nimport State from \"@model/State\";\n\nimport General from \"@plugin/General\";\nimport PHPCS from \"@plugin/PHPCS\";\nimport PHPCBF from \"@plugin/PHPCBF\";\nimport PHPCSFixer from \"@plugin/PHPCSFixer\";\nimport PHPFMT from \"@plugin/PHPFMT\";\n\nexport default class PluginService {\n    private state: State;\n    private general: General;\n    private phpCS: PHPCS;\n    private phpCBF: PHPCBF;\n    private phpCSFixer: PHPCSFixer;\n    private phpFMT: PHPFMT;\n\n    constructor(state: State) {\n        this.state = state;\n        const extensionContext = state.getExtensionContext();\n        this.general = new General(extensionContext, state);\n        this.phpCS = new PHPCS(extensionContext, state);\n        this.phpCBF = new PHPCBF(extensionContext, state);\n        this.phpCSFixer = new PHPCSFixer(extensionContext, state);\n        this.phpFMT = new PHPFMT(extensionContext, state);\n    }\n\n    public initPlugins(): void {\n        this.general.init();\n        this.phpCS.init();\n        this.phpCBF.init();\n        this.phpCSFixer.init();\n        this.phpFMT.init();\n    }\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// require('module-alias/register');\n\nimport * as vscode from \"vscode\";\nimport PHPThunder from \"./PHPThunder\";\n\nexport function activate(context: vscode.ExtensionContext) {\n    const phpThunder = new PHPThunder(context);\n\n\n\n    \n\n    // phpThunder.getPHPCS().init(context);\n    // phpThunder.getPHPCBF().init(context);\n    // phpThunder.getPHPCSFixer().init(context);\n    // phpThunder.getPHPFMT().init(context);\n}\n\nexport function deactivate() {}\n"],"names":[],"sourceRoot":""}